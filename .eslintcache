[{"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/index.js":"1","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/App.js":"2","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/data/store.js":"3","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/data/Global.js":"4","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/components/Navbar.jsx":"5","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/LogInPage.jsx":"6","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/API/API.js":"7","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/Util/TimeUtil.js":"8","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/SignUpPage.jsx":"9","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/components/TemporaryAlert.jsx":"10","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/DashboardPage.jsx":"11","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/TestPage.jsx":"12","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/ChangePassword.jsx":"13","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/E404Page.jsx":"14"},{"size":594,"mtime":1613215254915,"results":"15","hashOfConfig":"16"},{"size":1280,"mtime":1613386200657,"results":"17","hashOfConfig":"16"},{"size":697,"mtime":1613214949901,"results":"18","hashOfConfig":"16"},{"size":648,"mtime":1613220311345,"results":"19","hashOfConfig":"16"},{"size":1310,"mtime":1613214949971,"results":"20","hashOfConfig":"16"},{"size":2618,"mtime":1613226920211,"results":"21","hashOfConfig":"16"},{"size":1988,"mtime":1613385751232,"results":"22","hashOfConfig":"16"},{"size":1218,"mtime":1613214987801,"results":"23","hashOfConfig":"16"},{"size":4665,"mtime":1613226782130,"results":"24","hashOfConfig":"16"},{"size":803,"mtime":1613220037359,"results":"25","hashOfConfig":"16"},{"size":1112,"mtime":1613227865673,"results":"26","hashOfConfig":"16"},{"size":454,"mtime":1613378130789,"results":"27","hashOfConfig":"16"},{"size":3594,"mtime":1613386120159,"results":"28","hashOfConfig":"16"},{"size":144,"mtime":1613386206068,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lp3trr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/index.js",[],["63","64"],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/App.js",["65","66","67"],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/data/store.js",["68","69"],"import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport global from './Global';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, global);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/data/Global.js",[],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/components/Navbar.jsx",["70","71"],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/LogInPage.jsx",["72","73","74"],"import React, {useState, useEffect, useRef} from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\nimport {Form, Button} from 'react-bootstrap';\nimport {useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport {logIn} from '../API/API';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {setCurrentUser} from '../data/Global';\nvar sha256 = require('js-sha256');\n\nexport default function LogInPage () {\n  const history = useHistory ();\n  const dispatch = useDispatch ();\n\n  const [email, setemail] = useState ('');\n  const [password, setPassword] = useState ('');\n  function validateForm () {\n    return email.length > 0 && password.length > 0;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault ();\n    logIn (email, sha256(password)).then (res => {\n      if (res.data.length != 0) {\n        console.log ('log in');\n        history.push ('/dashboard');\n        dispatch (setCurrentUser (res.data[0]));\n      } else {\n        alertRef.current.showAlert ();\n      }\n    });\n  };\n\n  const onSignUpClick = () => {\n    history.push ('/sign-up');\n  };\n  const alertRef = useRef ();\n\n  const alertHeading = 'Log in failed';\n  const alertBody = 'Password or email are not correct! try again.';\n\n  return (\n    <div className=\"Login\">\n      <TemporaryAlert\n        body={alertBody}\n        heading={alertHeading}\n        type=\"warning\"\n        ref={alertRef}\n      />\n      <Player\n        autoplay\n        loop\n        src=\"https://assets1.lottiefiles.com/datafiles/RvQQlJ3ODelSiQi/data.json\"\n        style={{height: '300px', width: '300px'}}\n      />\n      <Form\n        className=\"d-flex flex-column align-items-md-center\"\n        onSubmit={handleSubmit}\n      >\n        <h3 className=\"pt-5 pb-3\"> Welcome Back!</h3>\n\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={e => setemail (e.target.value)}\n          />\n\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Control\n            type=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={e => setPassword (e.target.value)}\n          />\n        </Form.Group>\n        <Button\n          className=\"mt-3 mb-3\"\n          size=\"m\"\n          type=\"submit\"\n          disabled={!validateForm ()}\n        >\n          Login\n        </Button>\n        <Button  className=\"mb-3\"\n          size=\"m\" onClick={onSignUpClick}>\n          Sign Up\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/API/API.js",["75"],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/Util/TimeUtil.js",[],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/SignUpPage.jsx",["76","77"],"import React, {useState, useRef} from 'react';\nimport {Player, Controls} from '@lottiefiles/react-lottie-player';\nimport TemporaryAlert from '../components/TemporaryAlert';\nimport {doesEmailExists, register} from '../API/API';\nvar sha256 = require ('js-sha256');\n\nexport default function SignUpPage () {\n  const [fname, setFname] = useState ('');\n  const [lname, setLname] = useState ('');\n  const [email, setEmail] = useState ('');\n  const [password, setPassword] = useState ('');\n  const [repeatedPassword, setRepeatedPassword] = useState ('');\n  const [promoCode, setPromoCode] = useState ('');\n\n  const [alertType, setAlertType] = useState ('');\n  const [alertHeading, setAlertHeading] = useState ('');\n  const [alertBody, setAlertBody] = useState ('');\n\n  const handleSubmit = e => {\n    e.preventDefault ();\n\n    if (password !== repeatedPassword) {\n      setAlertType ('warning');\n      setAlertHeading ('Incorrect Password');\n      setAlertBody (\"Passwords don't match!\");\n      alertRef.current.showAlert ();\n      return;\n    }\n    // check if already exists\n    doesEmailExists (email).then (res => {\n      if (res.data.length != 0) {\n        // user already exists\n        setAlertType ('warning');\n        setAlertHeading ('User Exists');\n        setAlertBody (\n          'There is already an account registered with this email!'\n        );\n        alertRef.current.showAlert ();\n      } else {\n        // register\n\n        register (\n          fname,\n          lname,\n          email,\n          sha256 (password),\n          promoCode\n        ).then (res => {\n          setAlertType ('success');\n          setAlertHeading ('Success');\n          setAlertBody ('Registeration has been completed successfully!');\n          alertRef.current.showAlert ();\n        });\n      }\n    });\n  };\n  function validateForm () {\n    return (\n      fname.length > 0 &&\n      lname.length > 0 &&\n      email.length > 0 &&\n      password.length > 0 &&\n      repeatedPassword.length > 0 &&\n      promoCode.length > 0\n    );\n  }\n\n  const alertRef = useRef ();\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Player\n          src=\"https://assets5.lottiefiles.com/packages/lf20_wd1udlcz.json\"\n          background=\"transparent\"\n          speed=\"1\"\n          loop\n          autoplay\n          style={{height: '300px', width: '300px'}}\n        />\n        <TemporaryAlert\n          body={alertBody}\n          heading={alertHeading}\n          type={alertType}\n          ref={alertRef}\n        />\n\n        <div className=\" d-flex flex-column align-items-md-center\">\n        <h3 className=\"mt-5 mb-5\">Sign Up</h3>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"First name\"\n              onChange={e => setFname (e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              onChange={e => setLname (e.target.value)}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Last name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              onChange={e => setEmail (e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter password\"\n              onChange={e => setPassword (e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Repeat password\"\n              onChange={e => setRepeatedPassword (e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Have a promo code\"\n              onChange={e => setPromoCode (e.target.value)}\n            />\n          </div>\n\n          <button\n            disabled={!validateForm ()}\n            type=\"submit\"\n            className=\"btn btn-primary mt-3\"\n          >\n            Sign Up\n          </button>\n          <p className=\"forgot-password text-right\">\n            <a href=\"/reset-password\">Forgot Password?</a>\n          </p>\n          <p className=\"forgot-password text-right\">\n            Already registered <a href=\"/sign-in\">sign in?</a>\n          </p>\n        </div>\n      </form>       {' '}\n    </div>\n  );\n}\n","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/components/TemporaryAlert.jsx",["78"],"import React, {\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport {Alert} from 'react-bootstrap';\nvar timeout = null;\nconst TemporaryAlert = (\n  {body, heading, type = 'success', showTime = 5000},\n  ref\n) => {\n  const [show, setShow] = useState(false);\n \n  useImperativeHandle(ref, () => ({\n    showAlert: () => {\n      setShow(true);\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        closeAlert();\n      }, showTime);\n    },\n  }));\n\n  const closeAlert = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      {show && (\n        <Alert variant={type} onClose={closeAlert} dismissible>\n          <Alert.Heading>{heading}</Alert.Heading>\n          <p>{body}</p>\n        </Alert>\n      )}\n    </>\n  );\n};\nexport default forwardRef(TemporaryAlert);\n","/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/DashboardPage.jsx",[],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/TestPage.jsx",["79","80","81","82","83"],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/ChangePassword.jsx",["84","85"],"/Users/bsharazhran/Documents/GitHub/cs-frontend/src/pages/E404Page.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":4,"column":9,"nodeType":"92","messageId":"93","endLine":4,"endColumn":20},{"ruleId":"90","severity":1,"message":"94","line":4,"column":22,"nodeType":"92","messageId":"93","endLine":4,"endColumn":32},{"ruleId":"90","severity":1,"message":"95","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":16},{"ruleId":"90","severity":1,"message":"96","line":3,"column":3,"nodeType":"92","messageId":"93","endLine":3,"endColumn":15},{"ruleId":"90","severity":1,"message":"97","line":13,"column":9,"nodeType":"92","messageId":"93","endLine":13,"endColumn":20},{"ruleId":"90","severity":1,"message":"98","line":3,"column":9,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"99","line":3,"column":15,"nodeType":"92","messageId":"93","endLine":3,"endColumn":25},{"ruleId":"90","severity":1,"message":"100","line":1,"column":26,"nodeType":"92","messageId":"93","endLine":1,"endColumn":35},{"ruleId":"90","severity":1,"message":"101","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":24,"column":27,"nodeType":"104","messageId":"105","endLine":24,"endColumn":29},{"ruleId":"90","severity":1,"message":"106","line":2,"column":7,"nodeType":"92","messageId":"93","endLine":2,"endColumn":17},{"ruleId":"90","severity":1,"message":"101","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":31,"column":27,"nodeType":"104","messageId":"105","endLine":31,"endColumn":29},{"ruleId":"90","severity":1,"message":"100","line":2,"column":3,"nodeType":"92","messageId":"93","endLine":2,"endColumn":12},{"ruleId":"90","severity":1,"message":"107","line":2,"column":9,"nodeType":"92","messageId":"93","endLine":2,"endColumn":17},{"ruleId":"90","severity":1,"message":"108","line":6,"column":11,"nodeType":"92","messageId":"93","endLine":6,"endColumn":13},{"ruleId":"90","severity":1,"message":"109","line":7,"column":11,"nodeType":"92","messageId":"93","endLine":7,"endColumn":18},{"ruleId":"90","severity":1,"message":"110","line":8,"column":11,"nodeType":"92","messageId":"93","endLine":8,"endColumn":15},{"ruleId":"90","severity":1,"message":"111","line":9,"column":11,"nodeType":"92","messageId":"93","endLine":9,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":35,"column":6,"nodeType":"114","endLine":35,"endColumn":8,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"116","line":49,"column":20,"nodeType":"104","messageId":"105","endLine":49,"endColumn":22},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useDispach' is defined but never used.","'TestPage' is defined but never used.","'persistStore' is defined but never used.","'PersistGate' is defined but never used.","'Icon' is defined but never used.","'InlineIcon' is defined but never used.","'useEffect' is defined but never used.","'Controls' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'nodemailer' is assigned a value but never used.","'sendMail' is defined but never used.","'to' is assigned a value but never used.","'subject' is assigned a value but never used.","'text' is assigned a value but never used.","'onSuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'match'. Either include them or remove the dependency array.","ArrayExpression",["119"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [history, match]",{"range":"122","text":"123"},[1099,1101],"[history, match]"]